name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push backend image
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY_URI_BACKEND }}:latest -f backend/Dockerfile ./backend
          docker push ${{ secrets.ECR_REPOSITORY_URI_BACKEND }}:latest

      - name: Deploy backend
        run: |
          aws ecs update-service --region ${{ secrets.AWS_REGION }} --cluster shortify-cluster --service shortify-backend-service --force-new-deployment

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: deploy-backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push frontend image
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY_URI_FRONTEND }}:latest -f frontend/Dockerfile ./frontend
          docker push ${{ secrets.ECR_REPOSITORY_URI_FRONTEND }}:latest

      - name: Deploy frontend
        run: |
          aws ecs update-service --region ${{ secrets.AWS_REGION }} --cluster shortify-cluster --service shortify-frontend-service --force-new-deployment
